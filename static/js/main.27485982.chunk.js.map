{"version":3,"sources":["components/card/card.jsx","components/cardContainer/cardContainer.jsx","components/searchBox/searchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","user","id","name","email","username","CardContainer","users","map","SearchBox","placeholder","onChange","type","App","handleSearch","e","setState","searchField","target","value","state","fetch","then","res","json","catch","this","filteredUsers","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAGaA,G,YAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,YAAf,UACI,qBAAKC,IAAI,OAAOC,IAAG,+BAA0BH,EAAMI,KAAKC,GAArC,4BACnB,6BAAKL,EAAMI,KAAKE,OAChB,qCAAQN,EAAMI,KAAKC,MACnB,wCAAWL,EAAMI,KAAKG,SACtB,2CAAcP,EAAMI,KAAKI,iBCNxBC,G,MAAgB,SAAAT,GAAK,OAC9B,qBAAKC,UAAU,iBAAf,SAGQD,EAAMU,MAAMC,KAAI,SAACP,GAAD,OAAY,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKC,WCF3CO,G,MAAY,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,SACpC,OACI,8BACI,uBACIb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbC,SAAUA,QCuDXE,E,kDA9Db,aAAe,IAAD,8BACZ,gBAQFC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAPtC,EAAKC,MAAQ,CACXb,MAAO,GACPU,YAAa,IALH,E,gEAaO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACf,GAAD,OAAW,EAAKS,SAAS,CAAET,MAAOA,OACvCkB,MAAM,oB,+BAGD,IAAD,EACwBC,KAAKN,MAA5Bb,EADD,EACCA,MAAOU,EADR,EACQA,YACTU,EAAgBpB,EAAMqB,QAAO,SAAC3B,GAAD,OAEjCA,EAAKE,KAAK0B,cAAcC,SAASb,EAAYY,kBAG/C,OACE,sBAAK/B,UAAU,MAAf,UACE,8CAEA,cAAC,EAAD,CAAWa,SAAUe,KAAKZ,aAAcJ,YAAY,iBAEpD,cAAC,EAAD,CAAeH,MAAOoB,W,GAlCZI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.27485982.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.css'\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n        <div className='cardStyle'>\r\n            <img alt='user' src={`https://robohash.org/${props.user.id}?set=set2&size=180x180`}/>\r\n            <h2>{props.user.name}</h2>\r\n            <p>ID: {props.user.id}</p>\r\n            <p>Email: {props.user.email}</p>\r\n            <p>UserName: {props.user.username}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Card} from '../card/card'\r\nimport './cardContainer.css'\r\n\r\nexport const CardContainer = props =>  (\r\n    <div className='card-container'>\r\n        {\r\n            \r\n            props.users.map((user) => ( <Card key={user.id} user={user}/> )) \r\n        }\r\n    </div>\r\n       \r\n    )  \r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport './searchBox.css'\r\n\r\n\r\n//by passing down these two things from props we can make them dynamic\r\n\r\nexport const SearchBox = ({placeholder, onChange}) => {\r\n    return (\r\n        <div>\r\n            <input\r\n                className=\"search\"\r\n                type='search'\r\n                placeholder={placeholder}\r\n                onChange={onChange}\r\n            /> \r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport { CardContainer } from './components/cardContainer/cardContainer';\nimport { SearchBox } from './components/searchBox/searchBox';\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      users: [],\n      searchField: '',\n    };\n  }\n\n  handleSearch = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((res) => res.json())\n      .then((users) => this.setState({ users: users }))\n      .catch('error fetching');\n  }\n\n  render() {\n    const { users, searchField } = this.state;\n    const filteredUsers = users.filter((user) =>\n      //this sets everything to lowercase so we don't have case issues while searching\n      user.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className='App'>\n        <h1>User Rolodex</h1>\n\n        <SearchBox onChange={this.handleSearch} placeholder='Search Users' />\n\n        <CardContainer users={filteredUsers} />\n      </div>\n    );\n  }\n}\n\n// FUNCTIONAL COMPONENTS VERSION\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}